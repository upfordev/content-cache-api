name: Deploy Worker (main branch)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      # Secrets stored in github
      API_TOKEN: ${{ secrets.API_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies (verbose)
        run: |
          npm config set loglevel verbose
          npm ci

      - name: Set worker name
        id: env
        run: |
          WORKER_NAME="main"
          echo "worker_name=${WORKER_NAME}" >> $GITHUB_OUTPUT

      - name: Patch wrangler.jsonc with dynamic env
        run: |
          WORKER_NAME="${{ steps.env.outputs.worker_name }}"
          echo "Deploying to release environment: $WORKER_NAME"

          # Remove comments from JSONC to avoid jq parse errors
          grep -v '^\s*//' wrangler.jsonc > wrangler_clean.json

          # Inject new env block with main name, main entrypoint, and routes
          jq ". + { env: { \"release\": { \"name\": \"$WORKER_NAME\", \"main\": \"./dist/_worker.js/index.js\" } } }" wrangler_clean.json > wrangler.jsonc

      - name: Verify worker entrypoint exists
        run: ls -l ./dist/_worker.js/index.js

      # https://github.com/marketplace/actions/deploy-to-cloudflare-workers-with-wrangler
      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env main
          environment: main
          secrets: |
            API_TOKEN
        env:
          API_TOKEN: ${{ env.API_TOKEN }}
